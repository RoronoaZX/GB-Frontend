import{d as i,N as p}from"./index.f9204663.js";import{api as s}from"./axios.f9d7066b.js";const h=i("bakerReportsStore",{state:()=>({recipes:{},reportToView:[],reports:[],rawmaterials:[],user:{}}),actions:{setRecipe(r){this.recipes=r},setReport(r){this.reports.push(r)},removeReport(r){this.reports.splice(r,1)},setUser(r){this.user=r},clearData(){this.recipes={},this.reports=[]},async fetchBranchRawMaterials(r){const e=await s.get(`/api/branch/${r}/rawMaterials`);this.rawmaterials=e.data},async fetchBakerReport(r){const e=await s.get(`/api/branch/${r}/bakerReport`);this.reportToView=e.data},async fetchAllReports(){const r=await s.get("/api/initial-baker-report");this.reportToView=r.data},async fetchDoughReports(r){const e=await s.get(`/api/branch/${r}/bakerDoughReport`);console.log("===================================="),console.log("response",e.data),console.log("===================================="),this.reports=e.data},async createReports(){try{console.log("data to send:",this.reports);const r=await s.post("api/initial-baker-report",{reports:this.reports});p.create({type:"positive",message:"Report successfully send",timeout:1e3}),console.log("Reports to be saved:",this.reports),this.reports=[]}catch(r){console.error("Error saving report:",r)}},async confirmReport(r){try{const e=await s.post(`/api/confirm-initial-baker-report/${r}`);if(console.log("Confirming report with ID:",r),e.status===200){const t=this.reports.findIndex(o=>o.id===r);t!==-1&&this.reports.splice(t,1)}return e.data}catch(e){throw console.error("Error confirming report:",e),e}},async declineReport(r,e){try{const t=await s.post(`/api/decline-initial-baker-report/${r}`,{remark:e});if(t.status===200){const o=this.reports.findIndex(a=>a.id===r);o!==-1&&this.reports.splice(o,1)}return t.data}catch(t){console.error("Error declining report:",t)}}}});export{h as u};
