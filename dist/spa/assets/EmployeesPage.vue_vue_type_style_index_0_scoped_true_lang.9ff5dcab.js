import{f as d}from"./useEmployeeFunctions.7ec4c8fb.js";import{p as g,v as h}from"./vfs_fontes.6ee410e6.js";import{r,d as m,N as p}from"./index.640cd289.js";import{api as y}from"./axios.1b168828.js";g.exports.vfs=h;function b(i,s){const c=r(!1),n=r(""),e=t=>{u(i,l=>{u(s,a=>{const o=_(t,l,a);g.exports.createPdf(o).getDataUrl(f=>{n.value=f,c.value=!0})})})},u=(t,l)=>{const a=new FileReader,o=new XMLHttpRequest;o.open("GET",t,!0),o.responseType="blob",o.onload=function(){o.status===200?(a.readAsDataURL(o.response),a.onloadend=function(){l(a.result)}):console.error("Failed to load image.")},o.send()},_=(t,l,a)=>({pageSize:{width:323,height:204},pageMargins:[0,0,0,0],background:[{image:a,width:140,opacity:.1,absolutePosition:{x:70,y:15}}],content:[{canvas:[{type:"rect",x:0,y:0,w:260,h:150,lineWidth:1,lineColor:"black",dash:{length:4}}],absolutePosition:{x:0,y:0}},{alignment:"justify",columns:[{image:l,width:100,height:153,alignment:"left",margin:[-8,-4,0,0]},{stack:[{text:"GB Bakeshop",style:"header",color:"red",margin:[0,0,50,0]},{text:`Name  : ${d(t)}`,style:"name"},{text:`Position : ${t.position}`,style:"position"},{text:`Phone  : ${t.phone}`,style:"info"},{qr:`${t.id} - ${d(t)} - ${t.position}`,fit:87,foreground:"red",background:"yellow",margin:[30,7,0,0]}]}]}],styles:{header:{fontSize:15,bold:!0,alignment:"center"},name:{fontSize:8,bold:!0,margin:[5,1,0,0]},position:{fontSize:8,margin:[5,2,0,0]},info:{fontSize:7,margin:[5,2,0,0]},address:{fontSize:7,margin:[0,5,0,0]}}});return{dialog:c,pdfUrl:n,handlePrintID:e}}const D=m("designations",()=>{const i=r(null),s=r([]);return{designation:i,designations:s,createDesignation:async n=>{try{const e=await y.post("/api/branchEmployee",n);e&&e.data?(s.value.unshift(e.data),p.create({type:"positive",message:"Employee created successfully",setTimeout:1e3,position:"top"})):console.error("Unexpected API Response:",e)}catch(e){console.error("Error creating employee:",e),p.create({type:"negative",message:"Failed to create employeesss",setTimeout:1e3})}}}});const S=m("warehouseEmployee",()=>{const i=r(null),s=r([]);return{warehouseEmployee:i,warehouseEmployees:s,createWarehouseEmployee:async n=>{console.log("Creating employee with data:",n);try{const e=await y.post("/api/warehouse-employee",n);s.value=e.data,p.create({type:"positive",message:"Employee created successfully",setTimeout:1e3,position:"top"}),console.log("Response:",e.data)}catch(e){console.error("Error creating employee:",e),p.create({type:"negative",message:"Failed to create employeesss",setTimeout:1e3})}}}});export{D as a,S as b,b as u};
