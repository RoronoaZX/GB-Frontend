import{d as c,r as n,N as o}from"./index.5a162820.js";import{api as r}from"./axios.9ecc35b0.js";const b=c("incentives-bases",()=>{const i=n(null),a=n([]);return{incentiveBase:i,incentivesBases:a,createIncentives:async s=>{console.log("data from store",s);try{const t=await r.post("/api/incentives-bases",s);incentive.value=t.data}catch(t){console.error(t)}},fetchIncentivesBases:async()=>{try{const s=await r.get("/api/incentives-bases");console.log("fetchIncentivesBases",s.data),a.value=s.data}catch(s){console.error(s)}},fetchIncentivesPerCutOff:async s=>{console.log("fetchIncentivesPerCutOff",s);try{const t=await r.get(`/api/fetch-employee-incentives-per-cut-off/${s}`);console.log("Incentives Response",t.data),incentives.value=t.data}catch(t){console.log(t)}},updateNumberEmployee:async(s,t)=>{console.log("data from storessss",s);try{const e=await r.put("/api/incentives-bases/update-number-employee/"+s.id,{number_of_employees:t});return console.log("sssss",e),o.create({type:"positive",message:`${e.data.message}`,timeout:1e3}),e}catch(e){console.error(e),o.create({type:"negative",message:`${e.response.data.error}`,timeout:5e3})}},updateTargetKilo:async(s,t)=>{console.log("data from storessss",s);try{const e=await r.put("/api/incentives-bases/update-target/"+s.id,{target:t});return console.log("sssss",e),o.create({type:"positive",message:`${e.data.message}`,timeout:1e3}),e}catch(e){console.error(e),o.create({type:"negative",message:`${e.response.data.error}`,timeout:5e3})}},updateBakerMultiplier:async(s,t)=>{console.log("data from storessss",s);try{const e=await r.put("/api/incentives-bases/update-baker-multipier/"+s.id,{baker_multiplier:t});return console.log("sssss",e),o.create({type:"positive",message:`${e.data.message}`,timeout:1e3}),e}catch(e){console.error(e)}},updateLamesadorMultiplier:async(s,t)=>{console.log("data from storessss",s);try{const e=await r.put("/api/incentives-bases/update-lamesador-multipier/"+s.id,{lamesador_multiplier:t});return o.create({type:"positive",message:`${e.data.message}`,timeout:1e3}),e}catch(e){console.error(e),o.create({type:"negative",message:`${e.response.data.error}`,timeout:5e3})}},updateHorneroIncentives:async(s,t)=>{console.log("data from storessss",s);try{const e=await r.put("/api/incentives-bases/update-hornero-multipier/"+s.id,{hornero_multiplier:t});return o.create({type:"positive",message:`${e.data.message}`,timeout:1e3}),e}catch(e){console.error(e),o.create({type:"negative",message:`${e.response.data.error}`,timeout:5e3})}}}});export{b as u};
