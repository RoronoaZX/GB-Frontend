import{d as u,r as a}from"./index.d7a2dbda.js";import{api as s}from"./axios.ec9ed517.js";const x=u("selectaProduct",()=>{const p=a(null),n=a([]),r=a([]),l=a([]),d=a([]),i=a([]);return{selectaProduct:p,selectaProducts:n,pendingSelectaReports:r,confirmedSelectaReports:l,declinedSelectaReports:d,selectaProductReports:i,searchSelectaProducts:async({branches_id:t,query:o,category:e})=>{console.log(t),console.log(o),console.log(e);try{const c=await s.post("/api/search-selecta-products",{branches_id:t,query:o,category:e});n.value=c.data}catch(c){console.error("Error searching Selecta products:",c)}},createSelectaStocks:async t=>{console.log(t);try{const o=await s.post("/api/selecta-stocks-report",t);n.value=o.data}catch(o){console.log(o)}},fetchPendingSelectaStocks:async(t,o)=>{console.log("branchId",t),console.log("category",o);try{const e=await s.get(`/api/selecta-added-stocks/${t}/pending-reports`,{params:{status:o}});r.value=e.data}catch(e){console.log(e)}},fetchBranchSelectaProduct:async(t,o)=>{console.log("ID",t),console.log("category",o);try{const e=await s.get("/api/fetch-selecta-products",{params:{branches_id:t,category:o}});n.value=e.data,console.log("fetch datasss",e.data)}catch(e){throw console.error("Error fetching branch selecta products:",e),e}},confirmReport:async t=>{console.log("id",t);try{const o=await s.post(`/api/confirm-selecta-report/${t}`);if(o.status===200){const e=r.value.findIndex(c=>c.id===t);e!==-1&&r.value.splice(e,1)}return o.data}catch(o){console.log(o)}},fetchConfirmedSelectaStocks:async(t,o)=>{console.log("branchId",t),console.log("category",o);try{const e=await s.get(`/api/selecta-added-stocks/${t}/confirmed-reports`,{params:{status:o}});l.value=e.data}catch(e){console.log(e)}},fetchDeclinedSelectaStocks:async(t,o)=>{console.log("branchId",t),console.log("category",o);try{const e=await s.get(`/api/selecta-added-stocks/${t}/declined-reports`,{params:{status:o}});d.value=e.data}catch(e){console.log(e)}},fetchSelectaProductReports:async(t,o,e)=>{try{return(await s.get(`/api/selecta-added-stocks/${t}`,{params:{page:o,per_page:e}})).data}catch(c){throw console.log("Error fetching selecta product reports:",c),c}},declineReport:async(t,o)=>{console.log("id",t),console.log("remark",o);try{const e=await s.post(`/api/reports/${t}/decline-reports`,{remark:o});if(e.status===200){const c=r.value.findIndex(g=>g.id===t);c!==-1&&r.value.splice(c,1)}return e.data}catch(e){console.log(e)}}}});export{x as u};
