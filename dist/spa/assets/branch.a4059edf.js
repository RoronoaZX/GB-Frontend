import{d as B,n as y,g as d,N as o,P as c}from"./index.6a2e76bf.js";import{u as w}from"./warehouse.3a2614a9.js";import{api as t}from"./axios.eb07d1a5.js";import{u as v}from"./employee.a7dcc237.js";const x=B("branches",()=>{const i=y(null),s=y([]),m=v(),f=d(()=>m.employees),g=w(),l=d(()=>g.warehouses);console.log("warehouses",l.value);const p=async()=>{const e=await t.get("/api/branches");s.value=e.data,console.log("response",e.data)};return{branch:i,branches:s,fetchBranches:p,createBranches:async e=>{console.log("Data parameters being sent:",e);try{const a=await t.post("/api/branches",e),r=l.value.find(h=>h.id===e.warehouse_id),n=f.value.find(h=>h.id===e.employee_id),u={...a.data,warehouse:r?r.name:"No Warehouse",employee:n?`${n.firstname} ${n.lastname}`:"No Employee Assigned"};console.log("create branch",u),s.value.unshift(u),o.create({type:"positive",message:"Branch created successfully",timeout:1e3})}catch{o.create({type:"negative",icon:"error",message:"Failed to create branch"})}},updateBranches:async(e,a)=>{c.show();try{const r=await t.put(`/api/branches/${e}`,a);s.value=r.data,p(),o.create({type:"positive",message:"Branch updated successfully"})}catch(r){console.log("updateBranches",r),o.create({type:"negative",icon:"error",message:"Failed to update branch"})}finally{c.hide()}},deleteBranches:async e=>{c.show();try{await t.delete(`/api/branches/${e}`),s.value=s.value.filter(a=>a.id!==e),o.create({type:"positive",message:"Branch successfully delete"})}catch{o.create({type:"negative",icon:"error",message:"Failed to delete branch"})}finally{c.hide()}},fetchWarehouseName:async e=>{c.show();try{return(await t.get(`/api/branches/${e}`)).data.name}catch{return null}finally{c.hide()}},fetchBranchesById:async e=>{const a=await t.get(`/api/branches/${e}`);i.value=a.data},fetchBranchWithEmployee:async()=>{const e=await t.get("/api/fetchBranchWithEmployee");s.value=e.data}}});export{x as u};
