import{d as w,r as n,N as o,P as c}from"./index.ac1653ff.js";import{api as t}from"./axios.b45f1403.js";const B=w("warehouses",()=>{const u=n(null),a=n([]),h=n([]),p=async e=>{try{const s=await t.get(`/api/warehouse/${e}/warehouseBranchReports`);h.value=s.data,console.log("reponsess waREHOUSE ",s.data)}catch{}},d=async e=>{const s=await t.get(`/api/warehouse/${e}`);u.value=s.data},i=async()=>{try{const e=await t.get("/api/warehouses");a.value=e.data,console.log("response",e.data)}catch{o.create({type:"negative",message:"Failed to fetch warehouse",setTimeout:1e3})}finally{}};return{warehouse:u,warehouses:a,warehouseBranchReports:h,fetchWarehouses:i,createWarehouses:async e=>{console.log("Data parameters being sent:",e);try{const s=await t.post("/api/warehouses",e);console.log("Response from backend:",s.data),i()}catch(s){console.error("Error creating warehouse:",s.response?s.response.data:s.message),o.create({type:"negative",message:"Failed to create warehouse",setTimeout:1e3})}},updateWarehouses:async(e,s)=>{c.show();try{const r=await t.put(`/api/warehouses/${e}`,s),l=a.value.findIndex(y=>y.id===e);l!==-1&&(a.value[l]=r.data),o.create({type:"positive",message:"Warehouse updated successfully",setTimeout:1e3})}catch{o.create({type:"negative",message:"Failed to update warehouse",setTimeout:1e3})}finally{c.hide()}},deleteWarehouse:async e=>{c.show();try{const s=await t.delete(`/api/warehouses/${e}`);a.value=a.value.filter(r=>r.id!==e),o.create({type:"positive",message:"Warehouse deleted successfully"})}catch{o.create({type:"negative",message:"Failed to delete warehouse"})}finally{c.hide()}},fetchWarehouseWithEmployee:async()=>{const e=await t.get("/api/fetchWarehouseWithEmployee");a.value=e.data},fetchWarehouseByBranchID:p,fetchCertainWarehouse:d}});export{B as u};
