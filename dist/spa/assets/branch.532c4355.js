import{d as m,r as l,c as i,N as t,P as o}from"./index.ce1ba89f.js";import{u as g}from"./warehouse.f6c0e3f8.js";import{api as s}from"./axios.198f3ab8.js";import{u as f}from"./employee.0ffaf81f.js";const I=m("branches",()=>{const c=l(null),r=l([]),p=f();i(()=>p.employees);const u=g(),y=i(()=>u.warehouses);console.log("warehouses",y.value);const d=async a=>{try{console.log("Searching for branch with keyword:",a);const e=await s.post(`/api/search-branch?keyword=${a}`);console.log("Search branch:",e),e&&e.data&&e.data.length>0?(console.log("Search Results:",e.data),c.value=e.data):(console.log("No employees found or empty response"),c.value=[])}catch(e){console.error("Error searching employee:",e)}},n=async()=>{const a=await s.get("/api/branches");r.value=a.data,console.log("response",a.data)};return{branch:c,branches:r,search:d,fetchBranches:n,createBranches:async a=>{console.log("Data parameters being sent:",a);try{const e=await s.post("/api/branches",a);console.log("create branch",e.data),r.value.unshift(e.data),n(),t.create({type:"positive",message:"Branch created successfully",timeout:1e3})}catch(e){console.log(e),t.create({type:"negative",icon:"error",message:"Failed to create branch"})}},updateBranches:async(a,e)=>{o.show();try{const h=await s.put(`/api/branches/${a}`,e);r.value=h.data,n(),t.create({type:"positive",message:"Branch updated successfully"})}catch(h){console.log("updateBranches",h),t.create({type:"negative",icon:"error",message:"Failed to update branch"})}finally{o.hide()}},deleteBranches:async a=>{o.show();try{await s.delete(`/api/branches/${a}`),r.value=r.value.filter(e=>e.id!==a),t.create({type:"positive",message:"Branch successfully delete"})}catch{t.create({type:"negative",icon:"error",message:"Failed to delete branch"})}finally{o.hide()}},fetchWarehouseName:async a=>{o.show();try{return(await s.get(`/api/branches/${a}`)).data.name}catch{return null}finally{o.hide()}},fetchBranchesById:async a=>{const e=await s.get(`/api/branches/${a}`);c.value=e.data},fetchBranchWithEmployee:async()=>{const a=await s.get("/api/fetchBranchWithEmployee");r.value=a.data}}});export{I as u};
