import{d as o,N as s}from"./index.9c9d4c4e.js";import{api as t}from"./axios.fd4410eb.js";const p=o("bakerReportsStore",{state:()=>({recipes:{},reportToView:[],reports:[],rawmaterials:[],user:{}}),actions:{setRecipe(r){this.recipes=r},setReport(r){this.reports.push(r)},removeReport(r){this.reports.splice(r,1)},setUser(r){this.user=r},clearData(){this.recipes={},this.reports=[]},async fetchBranchRawMaterials(r){const e=await t.get(`/api/branch/${r}/rawMaterials`);this.rawmaterials=e.data},async fetchBakerReport(r){const e=await t.get(`/api/branch/${r}/bakerReport`);this.reportToView=e.data},async fetchAllReports(){const r=await t.get("/api/initial-baker-report");this.reportToView=r.data},async fetchDoughReports(r){const e=await t.get(`/api/branch/${r}/bakerDoughReport`);this.reports=e.data},async createReports(){try{console.log("data to send:",this.reports);const r=await t.post("api/initial-baker-report",{reports:this.reports});s.create({type:"positive",message:"Report successfully send",timeout:1e3}),console.log("Reports to be saved:",this.reports),this.reports=[]}catch(r){console.error("Error saving report:",r)}},async confirmReport(r){try{const e=await t.post(`/api/confirm-initial-baker-report/${r}`);return console.log("Confirming report with ID:",r),await this.fetchDoughReports(),e.data}catch(e){throw console.error("Error confirming report:",e),e}},async declineReport(r){try{await t.post(`/api/decline-initial-baker-report/${r}`),this.fetchDoughReports}catch(e){console.error("Error declining report:",e)}}}});export{p as u};
