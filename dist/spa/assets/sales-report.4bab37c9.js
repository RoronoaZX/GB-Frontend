import{d as i,N as a}from"./index.a4e8ffb6.js";import{api as r}from"./axios.82e5ba61.js";const p=i("salesReports",{state:()=>({salesReport:[],products:[],branchProducts:[],breadProducts:[],selectaProducts:[],softdrinksProducts:[],cakeProducts:[],othersProducts:[],reports:[],user:{},breadReports:[],selectaReports:[],softdrinksReports:[],cakeReports:[],otherProductsReports:[],withReceiptExpensesReports:[],withOutReceiptExpensesReport:[],employeeCreditReports:[],denominationReports:[],productsTotalAmount:0,expensesTotalAmount:0,employeeCreditTotalAmount:0,denominationTotal:0,charges:0,overTotal:0}),actions:{setUser(t){this.user=t},removeBread(t){this.breadReports.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},removeSelecta(t){this.selectaReports.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},removeSoftdrink(t){this.softdrinksReports.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},removeCake(t){this.cakeReports.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},removeOtherProducts(t){this.otherProductsReports.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},removeEmployeeCreditReport(t){this.employeeCreditReports.splice(t,1)},removeWithReceiptExpenses(t){this.withReceiptExpensesReports.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},removeExpenses(t){this.withOutReceiptExpensesReport.splice(t,1),this.updateProductsTotalAmount(),this.calculateCharges(this.denominationTotal)},filterBreadproducts(){this.breadProducts=this.branchProducts.filter(t=>t.category==="Bread")},filterSelectaproducts(){this.selectaProducts=this.branchProducts.filter(t=>t.category==="Selecta")},filterSoftdrinksproducts(){this.softdrinksProducts=this.branchProducts.filter(t=>t.category==="Softdrinks")},filterOthersproducts(){this.othersProducts=this.branchProducts.filter(t=>t.category==="Others")},updateBreadReport(t){const e=this.breadReports.findIndex(s=>s.name===t.name);e!==-1?this.breadReports.splice(e,1,t):this.breadReports.push(t)},updateSelectaReport(t){const e=this.selectaReports.findIndex(s=>s.name===t.name);e!==-1?this.selectaReports.splice(e,1,t):this.selectaReports.push(t)},updateSoftdrinksReport(t){const e=this.softdrinksReports.findIndex(s=>s.name===t.name);e!==-1?this.softdrinksReports.splice(e,1,t):this.softdrinksReports.push(t)},updateCakeReport(t){const e=this.cakeReports.findIndex(s=>s.name===t.name);e!==-1?this.cakeReports.splice(e,1,t):this.cakeReports.push(t)},updateOtherProductsReport(t){const e=this.otherProductsReports.findIndex(s=>s.name===t.name);e!==-1?this.otherProductsReports.splice(e,1,t):this.otherProductsReports.push(t)},updateEmployeeCreditReports(t){this.employeeCreditReports.push(t),this.updateExpensesTotalAmount(),this.calculateCharges(this.denominationTotal)},updateWithReceiptExpensesReport(t){console.log("report to with receipt data expense in store",t),this.withReceiptExpensesReports.push(t),this.updateExpensesTotalAmount()},updateWithOutReceiptExpensesReport(t){this.withOutReceiptExpensesReport.push(t),this.updateExpensesTotalAmount(),this.calculateCharges(this.denominationTotal)},getDenominationData(t){this.denominationReports.push(t)},updateDenominationTotal(t){this.denominationTotal=t},calculateCharges(t){const e=this.breadTotalAmount+this.selectaTotalAmount+this.softdrinksTotalAmount+this.otherProductsTotalAmount+this.cakeTotalAmount-this.creditExpensesTotal;console.log("Total Sales Amount:",e),t<e?(this.charges=e-t,this.overTotal=0):(this.charges=0,this.overTotal=t-e),console.log("Chargessss:",this.charges),console.log("Charges total:",this.overTotal)},updateProductsTotalAmount(){this.productsTotalAmount=this.breadTotalAmount+this.selectaTotalAmount+this.softdrinksTotalAmount+this.cakeTotalAmount+this.otherProductsTotalAmount},updateExpensesTotalAmount(){this.expensesTotalAmount=this.expensesSumAmount},async searchBranchProducts(t,e){console.log("productSearch",t),console.log("branchId",e);try{const s=await r.post("/api/search-products",{keyword:t,branch_id:e});this.products=s.data,console.log("search Products",s.data)}catch(s){console.error("Error fetching products",s)}},async fetchBranchProducts(t){console.log("Branch ID",t);const e=await r.get(`/api/branches/${t}/products`);this.branchProducts=e.data,this.filterBreadproducts(),this.filterSelectaproducts(),this.filterSoftdrinksproducts(),this.filterOthersproducts()},async fetchSalesReports(t,e,s){try{const o=await r.get(`/api/branches/${t}/branch-sales-report`,{params:{page:e,per_page:s}});console.log("sales report",o.data),this.salesReport=o.data}catch(o){console.log(o)}},async adminSubmitReports(t){console.log("data.data",t),console.log("data.user_id",t.user_id),console.log("data.branch_id",t.branch_id),console.log("data.created_at",t.created_at),this.creditTotalAmount;const e={user_id:t.user_id,branch_id:t.branch_id,created_at:t.created_at,breadReports:this.breadReports,selectaReports:this.selectaReports,softdrinksReports:this.softdrinksReports,otherProductsReports:this.otherProductsReports,cakeReports:this.cakeReports,withOutReceiptExpensesReport:this.withOutReceiptExpensesReport,denominationReports:this.denominationReports,creditReports:this.employeeCreditReports,denomination_total:this.denominationTotal,expenses_total:this.expensesSumAmount,products_total_sales:this.totalSalesAmount,charges_amount:this.charges,over_total:this.overTotal,credit_total:this.creditTotalAmount};console.log("Payload data:",e);try{const s=await r.post("/api/admin-sales-report",e);a.create({type:"positive",message:"Report submitted successfully"}),this.breadReports=[],this.selectaReports=[],this.softdrinksReports=[],this.otherProductsReports=[],this.withOutReceiptExpensesReport=[],this.denominationReports=[],this.employeeCreditReports=[],this.cakeReports=[],this.denominationTotal=0,this.expensesTotalAmount=0,this.productsTotalAmount=0,this.charges=0,this.overTotal=0,console.log("Sales Reports Data",s)}catch(s){console.error("Error submitting data:",s),a.create({type:"negative",message:"Error submitting report"})}},async submitSalesReports(){var e,s;this.creditTotalAmount;const t={user_id:this.user.data.id,branch_id:(s=(e=this.user)==null?void 0:e.device)==null?void 0:s.reference_id,breadReports:this.breadReports,selectaReports:this.selectaReports,softdrinksReports:this.softdrinksReports,otherProductsReports:this.otherProductsReports,cakeReports:this.cakeReports,withOutReceiptExpensesReport:this.withOutReceiptExpensesReport,denominationReports:this.denominationReports,creditReports:this.employeeCreditReports,denomination_total:this.denominationTotal,expenses_total:this.expensesSumAmount,products_total_sales:this.totalSalesAmount,charges_amount:this.charges,over_total:this.overTotal,credit_total:this.creditTotalAmount};console.log("Payload data:",t);try{const o=await r.post("/api/sales-report",t);console.log("Data submitted successfully"),a.create({type:"positive",message:"Report submitted successfully"}),this.breadReports=[],this.selectaReports=[],this.softdrinksReports=[],this.otherProductsReports=[],this.withOutReceiptExpensesReport=[],this.denominationReports=[],this.employeeCreditReports=[],this.cakeReports=[],this.denominationTotal=0,this.expensesTotalAmount=0,this.productsTotalAmount=0,this.charges=0,this.overTotal=0,console.log("Sales Reports Data",o)}catch(o){console.error("Error submitting data:",o),a.create({type:"negative",message:"Error submitting report"})}}},getters:{breadTotalAmount:t=>t.breadReports.reduce((e,s)=>e+s.sales,0),selectaTotalAmount:t=>t.selectaReports.reduce((e,s)=>e+s.sales,0),softdrinksTotalAmount:t=>t.softdrinksReports.reduce((e,s)=>e+s.sales,0),otherProductsTotalAmount:t=>t.otherProductsReports.reduce((e,s)=>e+s.sales,0),cakeTotalAmount:t=>t.cakeReports.filter(e=>e.sales_status==="sold").reduce((e,s)=>e+Number(s.price),0),expensesSumAmount:t=>t.withOutReceiptExpensesReport.reduce((e,s)=>e+s.amount,0),creditTotalAmount:t=>t.employeeCreditReports.reduce((e,s)=>e+s.total_amount,0),creditExpensesTotal:t=>t.expensesSumAmount+t.creditTotalAmount,getDenominationTotal:t=>t.denominationTotal,getCharges:t=>t.charges,totalSalesAmount:t=>t.breadTotalAmount+t.selectaTotalAmount+t.softdrinksTotalAmount+t.otherProductsTotalAmount+t.cakeTotalAmount}});export{p as u};
