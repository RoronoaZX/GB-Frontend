import{d as g,r as i,N as o}from"./index.e59c1f7d.js";import{api as s}from"./axios.e6019dc6.js";const $=g("dtrs",()=>{const d=i(null),r=i([]),n=i([]),p=i([]),u=i({}),T=e=>{console.log("Setting user in DTR store:",e.data),u.value=e.data},l=async(e,t,a)=>{try{const c=await s.get("/api/dtr",{params:{page:e,per_page:t,search:a}});return c&&c.data?(r.value=c.data,c.data):(console.warn("No data returned from API."),r.value=[],[])}catch(c){return console.error("Error fetching DTR data:",c),r.value=[],[]}};return{dtr:d,dtrs:r,dtrCutOffData:n,branchWithWarehouses:p,user:u,setUser:T,fetchDTR:l,fetchDTRRange:async e=>{console.log("Fetching DTR Range with data:",e);const t=await s.post("/api/dtr-data",e);console.log("DTR Range response:",t),n.value=t.data},fetchEmployeeDTRRange:async e=>{console.log("Fetching DTR Range with data:",e);const t=await s.post("/api/dtr-data",e);console.log("DTR Range response:",t),n.value=t.data},fetchDTRPayrollPerCutOff:async e=>{console.log("fetchDTRPayrollPerCutOff",e);try{const t=await s.get(`/api/fetch-drt-payroll-per-cut-off/${e}`);n.value=t.data}catch(t){console.log(t)}},saveOvertime:async e=>{const t=await s.post("/api/saveOvertime",e);r.value=t.data,l(),o.create({type:"positive",message:"Over Time Save"})},searchDTR:async e=>{try{console.log("Searching for DTR with keyword:",e);const t=await s.post(`/api/search-drt?keyword=${e}`);console.log("DTR response:",t),r.value=t.data}catch(t){console.error("Error searching DTR:",t)}},approveOvertime:async e=>{console.log("Approving overtime with data:",e);try{const t=await s.post("/api/approveOvertime",e);return o.create({type:"positive",message:"Over Time Approved"}),t.data}catch(t){console.error("Error approving overtime:",t)}},declineOvertime:async e=>{const t=await s.post("/api/declineOvertime",e);return o.create({type:"negative",message:"Over Time Declined"}),t.data},updateDtrScheduleIn:async e=>{console.log("updateDtrScheduleIn in store:",e);const t=e.id;try{const a=await s.put(`/api/update-dtr-schedule-in/${t}`,e);o.create({message:"Scheduled in updated successfully",color:"positive",position:"top",timeout:2e3})}catch(a){console.log("error",a),o.create({message:"Failed to update schedule in",color:"negative",position:"top",timeout:2e3})}},updateDtrSheduleOut:async e=>{console.log("updateDtrSheduleOut in store",e);const t=e.id;try{const a=await s.put(`/api/update-dtr-schedule-out/${t}`,e);o.create({message:"Scheduled out updated successfully",color:"positive",position:"top",timeout:2e3})}catch(a){console.log(a),o.create({message:"Schedules out updated successfully",color:"positive",position:"top",timeout:2e3})}},getBranchWithWarehouses:async()=>{try{const e=await s.get("/api/getBranchWithWarehouses");console.log("getBranchWithWarehouses response",e),p.value=e.data}catch(e){console.log("getBranchWithWarehouses error",e)}},updateDTRWhereIN:async e=>{console.log("updateDTRWhereIN in store:",e);try{const t=await s.put("/api/updateDTRWhereIN",e);o.create({message:"DTR Where IN updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Where IN",color:"negative",position:"top",timeout:2e3})}},updateDTRWhereOUT:async e=>{console.log("updateDTRWhereOUT in store:",e);try{const t=await s.put("/api/updateDTRWhereOUT",e);o.create({message:"DTR Where OUT updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Where OUT",color:"negative",position:"top",timeout:2e3})}},updateDTRShiftStatus:async e=>{console.log("updateDTRShiftStatus in store:",e);try{const t=await s.put("/api/updateDTRShiftStatus",e);o.create({message:"DTR Shift Status updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Shift Status",color:"negative",position:"top",timeout:2e3})}},updateDTRDateIN:async e=>{console.log("updateDTRDateIN in store:",e);try{const t=await s.put("/api/updateDTRDateIN",e);o.create({message:"DTR Date IN updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Date IN",color:"negative",position:"top",timeout:2e3})}},updateDTRDateOUT:async e=>{console.log("updateDTRDateOUT in store:",e);try{const t=await s.put("/api/updateDTROUT",e);o.create({message:"DTR Date OUT updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Date OUT",color:"negative",position:"top",timeout:2e3})}},updateDTRTimeIN:async e=>{console.log("updateDTRTimeIN in store",e);try{const t=await s.put("/api/updateDTRTimeIN",e);o.create({message:"DTR Time IN updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Time IN",color:"negative",position:"top",timeout:2e3})}},updateDTRTimeOUT:async e=>{console.log("updateDTRTimeOUT in store",e);try{const t=await s.put("/api/updateDTRTimeOUT",e);o.create({message:"DTR Time OUT updated successfully",color:"positive",position:"top",timeout:2e3})}catch(t){console.log("error",t),o.create({message:"Failed to update DTR Time OUT",color:"negative",position:"top",timeout:2e3})}}}});export{$ as u};
