import{d as n,P as a,N as i}from"./index.d9da0f14.js";import{api as s}from"./axios.5eac078d.js";const h=n("bakerReportsStore",{state:()=>({recipes:{},reportToView:[],reports:[],rawmaterials:[],user:{}}),actions:{setRecipe(e){this.recipes=e},setReport(e){this.reports.push(e)},removeReport(e){this.reports.splice(e,1)},setUser(e){this.user=e},clearData(){this.recipes={},this.reports=[]},async fetchBranchRawMaterials(e){const r=await s.get(`/api/branch/${e}/rawMaterials`);this.rawmaterials=r.data},async fetchBakerReport(e){const r=await s.get(`/api/branch/${e}/bakerReport`);this.reportToView=r.data},async fetchAllReports(){const e=await s.get("/api/initial-baker-report");this.reportToView=e.data},async fetchDoughReports(e){const r=await s.get(`/api/branch/${e}/bakerDoughReport`);console.log("===================================="),console.log("response",r.data),console.log("===================================="),this.reports=r.data},async createReports(){try{console.log("data to send:",this.reports),a.show();const e=await s.post("api/initial-baker-report",{reports:this.reports});i.create({type:"positive",message:"Report successfully send",timeout:1e3}),console.log("Reports to be saved:",this.reports),this.reports=[]}catch(e){console.error("Error saving report:",e),i.create({type:"negative",message:"Error sending report",timeout:1e3})}finally{a.hide()}},async confirmReport(e){try{const r=await s.post(`/api/confirm-initial-baker-report/${e}`);if(console.log("Confirming report with ID:",e),r.status===200){const t=this.reports.findIndex(o=>o.id===e);t!==-1&&this.reports.splice(t,1)}return r.data}catch(r){throw console.error("Error confirming report:",r),r}},async declineReport(e,r){try{const t=await s.post(`/api/decline-initial-baker-report/${e}`,{remark:r});if(t.status===200){const o=this.reports.findIndex(p=>p.id===e);o!==-1&&this.reports.splice(o,1)}return t.data}catch(t){console.error("Error declining report:",t)}}}});export{h as u};
