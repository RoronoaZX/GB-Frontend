import{d as n,r,P as c,N as t}from"./index.c83df546.js";import{api as i}from"./axios.c394db86.js";const f=n("recipes",()=>{const o=r(null),a=r([]);return{recipe:o,recipes:a,fetchRecipes:async()=>{const s=await i.get("/api/recipes");a.value=s.data},createRecipe:async s=>{try{c.show();const e=await i.post("/api/recipes",s);e.data.message==="Recipe saved successfully"?(a.value.unshift(e.data.recipe),t.create({type:"positive",message:"Recipe successfully created",timeout:1e3})):e.data.message==="Recipe already exist"&&t.create({type:"warning",message:"Recipe already exists."})}catch(e){console.error("User Error message: ",e),t.create({type:"negative",message:"An error occurred while saving the recipe."})}finally{c.hide()}},deleteRecipe:async s=>{c.show();try{const e=await i.delete(`/api/recipes/${s}`);a.value=a.value.filter(p=>p.id!==s),t.create({type:"positive",icon:"warning",message:"Recipe succesfully deleted",timeout:1e3})}catch(e){t.create({message:`Failed to delete item: ${e.message}`,type:"negative",position:"top-right"})}finally{c.hide()}},searchRecipe:async s=>{const e=await i.get("/api/search-recipes",{params:{keyword:s}});a.value=e.data,console.log("recipe:",e.data)}}});export{f as u};
