import{d as m,r as c,N as t,P as n}from"./index.05f93853.js";import{api as a}from"./axios.a8d41f8b.js";const S=m("warehouses",()=>{const u=c(null),o=c([]),h=c([]),i=c({}),d=e=>{i.value=e},w=async e=>{try{console.log("Searching for warehouse with keyword:",e);const s=await a.post("/api/search-warehouse",{keyword:e});console.log("warehouse reposnse",s.data),u.value=s.data}catch(s){console.log(s)}},y=async e=>{try{const s=await a.get(`/api/warehouse/${e}/warehouseBranchReports`);h.value=s.data,console.log("reponsess waREHOUSE ",s.data)}catch{}},g=async e=>{const s=await a.get(`/api/warehouse/${e}`);u.value=s.data},l=async()=>{try{const e=await a.get("/api/warehouses");o.value=e.data,console.log("response",e.data)}catch{t.create({type:"negative",message:"Failed to fetch warehouse",setTimeout:1e3})}finally{}};return{user:i,warehouse:u,warehouses:o,warehouseBranchReports:h,fetchWarehouses:l,createWarehouses:async e=>{console.log("Data parameters being sent:",e);try{const s=await a.post("/api/warehouses",e);console.log("Response from backend:",s.data),l()}catch(s){console.error("Error creating warehouse:",s.response?s.response.data:s.message),t.create({type:"negative",message:"Failed to create warehouse",setTimeout:1e3})}},updateWarehouses:async(e,s)=>{n.show();try{const r=await a.put(`/api/warehouses/${e}`,s),p=o.value.findIndex(f=>f.id===e);p!==-1&&(o.value[p]=r.data),t.create({type:"positive",message:"Warehouse updated successfully",setTimeout:1e3})}catch{t.create({type:"negative",message:"Failed to update warehouse",setTimeout:1e3})}finally{n.hide()}},deleteWarehouse:async e=>{n.show();try{const s=await a.delete(`/api/warehouses/${e}`);o.value=o.value.filter(r=>r.id!==e),t.create({type:"positive",message:"Warehouse deleted successfully"})}catch{t.create({type:"negative",message:"Failed to delete warehouse"})}finally{n.hide()}},fetchWarehouseWithEmployee:async()=>{const e=await a.get("/api/fetchWarehouseWithEmployee");o.value=e.data},fetchWarehouseByBranchID:y,fetchCertainWarehouse:g,search:w,setUser:d}});export{S as u};
