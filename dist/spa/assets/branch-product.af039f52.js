import{d as f,r as o,c as g,P as d,N as n}from"./index.66c8cdd5.js";import{api as a}from"./axios.39b861ff.js";import{u as m}from"./product.4104981b.js";const I=f("branchProducts",()=>{const p=o(null),c=o([]),h=o([]),l=m(),u=g(()=>l.products);return console.log("Branch PRoductssss:",u.value),{branchId:h,branchProduct:p,branchProducts:c,fetchBranchProducts:async t=>{const e=await a.get(`/api/branches/${t}/products`);c.value=e.data},createBranchProducts:async t=>{d.show();try{const{category:e,price:r}=t,s=await a.post("/api/branch-products",t);if(s.data.message==="Branch product saved successfully"){const i=u.value.find(y=>y.id===t.product_id),P={...s.data,category:e||"No Category",price:r?parseInt(r):0,product:i||{name:"No Product",category:"Unknown"},total_quantity:t.total_quantity};c.value.unshift(P),n.create({type:"positive",message:"Branch product saved successfully",position:"top"})}else s.data.message==="The product already exists in this branch."&&n.create({type:"warning",message:"The product already exists in this branch.",position:"top"})}catch{n.create({type:"negative",message:"An error occurred while saving the branch product.",position:"top"})}finally{d.hide()}},updateBranchProductPrice:async t=>{await a.put(`/api/update-branch-products/${t}`,{price:newPrice});const e=c.value.findIndex(r=>r.id===t);e!==-1&&(c.value[e].price=newPrice)},deleteBranchProducts:async t=>{await a.delete(`/api/branch-products/${t}`),c.value=c.value.filter(e=>e.id!==t)}}});export{I as u};
