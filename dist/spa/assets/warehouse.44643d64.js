import{d as b,r as c,N as a,P as u}from"./index.3a3e1599.js";import{api as r}from"./axios.c34fa188.js";const T=b("warehouses",()=>{const i=c(null),o=c([]),l=c([]),p=c({}),m=e=>{p.value=e},f=async e=>{try{console.log("Searching for warehouse with keyword:",e);const s=await r.post("/api/search-warehouse",{keyword:e});console.log("warehouse reposnse",s.data),i.value=s.data}catch(s){console.log(s)}},W=async e=>{console.log("warehouseId",e);try{const s=await r.get(`/api/warehouse/${e}/warehouseBranchReports`);l.value=s.data,console.log("reponsess waREHOUSE ",s.data)}catch{}},v=async e=>{const s=await r.get(`/api/warehouse/${e}`);i.value=s.data},d=async()=>{try{const e=await r.get("/api/warehouses");o.value=e.data,console.log("response",e.data)}catch{a.create({type:"negative",message:"Failed to fetch warehouse",timeout:1e3})}finally{}};return{user:p,warehouse:i,warehouses:o,warehouseBranchReports:l,fetchWarehouses:d,createWarehouses:async e=>{console.log("Data parameters being sent:",e);try{const s=await r.post("/api/warehouses",e);console.log("Response from backend:",s),d(),a.create({type:"positive",message:"Warehouse created successfully",timeout:1e3})}catch(s){console.error("Error creating warehouse:",s.response),s.response.data.message==="The name has already been taken."?a.create({type:"warning",icon:"warning",message:"The name has already been taken.",timeout:5e3}):a.create({type:"negative",icon:"error",message:s.response.data.message||"ERROR",timeout:5e3})}},updateWarehouses:async(e,s)=>{var n,g,y,w;console.log("datass",s);try{u.show();const t=await r.put(`/api/warehouses/${e}`,s);console.log("edit warehouse",t.data);const E=t.data,h=o.value.findIndex(R=>R.id===e);h!==-1&&(o.value[h]={...o.value[h],...E}),a.create({type:"positive",message:"Warehouse updated successfully",timeout:1e3})}catch(t){console.log(t),console.log("resposnses.error",t.response),t.response.data.message==="The name has already been taken."?a.create({type:"warning",icon:"warning",message:((g=(n=t.response)==null?void 0:n.data)==null?void 0:g.message)||"Failed to update warehouse",timeout:5e3}):a.create({type:"negative",icon:"error",message:((w=(y=t.response)==null?void 0:y.data)==null?void 0:w.message)||"Failed to update warehouse",timeout:5e3})}finally{u.hide()}},deleteWarehouse:async e=>{u.show();try{const s=await r.delete(`/api/warehouses/${e}`);o.value=o.value.filter(n=>n.id!==e),a.create({type:"positive",message:"Warehouse deleted successfully"})}catch{a.create({type:"negative",message:"Failed to delete warehouse"})}finally{u.hide()}},fetchWarehouseWithEmployee:async()=>{const e=await r.get("/api/fetchWarehouseWithEmployee");o.value=e.data},fetchWarehouseByBranchID:W,fetchCertainWarehouse:v,search:f,setUser:m}});export{T as u};
