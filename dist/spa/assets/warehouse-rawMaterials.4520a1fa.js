import{d as m,r as t,c as W,P as u,N as c}from"./index.05f93853.js";import{api as r}from"./axios.a8d41f8b.js";import{u as b}from"./raw-material.cbb5b2d7.js";const j=m("warehouseRawMaterials",()=>{const R=t(null),o=t([]),y=t([]),w=t([]),p=t([]),h=t([]),l=t([]),d=t({}),g=e=>{d.value=e},v=b(),M=W(()=>v.rawMaterials);return{setUser:g,setReport:e=>{console.log("report",e),l.value.push(e),h.value=[]},removeReport:e=>{l.value.splice(e,1)},user:d,branch:w,warehouseId:y,branchRecipe:h,branchRawMaterials:p,warehouseRawMaterial:R,warehouseRawMaterials:o,warehouseRawMaterialsReport:l,createWarehouseRawMaterials:async e=>{u.show(),console.log("datassss",e);try{const a=await r.post("/api/warehouse-raw-materials-report",e);if(console.log("responsedfasdfasd",a.data),a.data.message==="Warehouse Raw Materials saved successfully"){const s=M.value.find(i=>i.id===e.raw_material_id),n={...a.data,raw_materials:s||{name:"No Name",code:"Unknown"},total_quantity:e.total_quantity};console.log("newRawMaterials",n),o.value.unshift(n),c.create({type:"positive",message:"Warehouse Raw Materials saved successfully",position:"top"})}else a.data.message==="The RawMaterials already exists in this branch."&&c.create({type:"warning",message:"The Raw Materials already exists in this branch.",position:"top"})}catch(a){console.log(a),c.create({type:"negative",message:"An error occurred while saving the branch product.",position:"top"})}finally{u.hide()}},fetchWarehouseRawMaterials:async e=>{console.log("warehouseId",e);try{const a=await r.get(`/api/warehouse/${e}/rawMaterials`);console.log("responsesss",a.data),o.value=a.data}catch(a){console.log("error",a)}},deleteWarehouseRawMaterials:async e=>{await r.delete(`/api/warehouse-raw-materials-report/${e}`),o.value=o.value.filter(a=>a.id!==e)},searchWarehouseRawMaterials:async(e,a)=>{const s=await r.post("/api/search-warehouse-rawMaterials",{keyword:e,warehouse_id:a});o.value=s.data},warehouseAddSupply:async e=>{console.log("data, ",e);try{const a=await r.post("/api/warehouseRawMaterials-add-supply",e);o.value=a.data,console.log("warehouseRawMaterials save",o)}catch(a){console.error(a)}},fetchBranchUnderWarehouse:async e=>{try{const a=await r.get(`/api/warehouse/${e}/branch`);console.log("responsesss",a.data),w.value=a.data}catch(a){console.log("error",a)}},fetchBranchRawMaterials:async e=>{console.log("branchIdss",e);try{const a=await r.get(`/api/branch/${e}/rawMaterials`);console.log("responsesss",a.data),p.value=a.data}catch(a){console.log("error",a)}},searchBranchRecipe:async(e,a)=>{const s=await r.get("/api/branch-recipe-search",{params:{keyword:e,branch_id:a}});h.value=s.data,console.log("branch recipe",s.data)},saveWarehouseRawMaterialsReport:async()=>{try{console.log("warehouseRawMaterialsReport",l.value);const e=await r.post("/api/warehouse-rawMaterials-report",{reports:l.value});console.log("Report saved successfully:",e.data)}catch(e){e.response&&e.response.data?console.error("Error response:",e.response.data):console.error("Unexpected error:",e)}},createMultipleWarehouseRawMaterials:async e=>{try{const a=await r.post("/api/warehouse/raw-materials/bulk-create",{materials:e});if(a.data.message==="Warehouse Raw Materials saved successfully"){const s=e.map(n=>{const i=M.value.find(f=>f.id===n.raw_material_id);return{...n,raw_materials:i||{name:"No Name",code:"Unknown"},total_quantity:n.total_quantity}});console.log("newRawMaterials",...s),o.value.unshift(...s),c.create({type:"positive",message:"Warehouse Raw Materials saved successfully",position:"top"})}else a.data.message==="The RawMaterials already exists in this branch."&&c.create({type:"warning",message:"The Raw Materials already exists in this branch.",position:"top"})}catch(a){console.log(a),c.create({type:"negative",message:"An error occurred while saving the branch product.",position:"top"})}finally{u.hide()}}}});export{j as u};
