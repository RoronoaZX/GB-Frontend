import{d as k,r as n,P as R}from"./index.9b38bd76.js";import{api as s}from"./axios.9ae20ed7.js";const $=k("bread",()=>{const u=n(null),i=n([]),a=n([]);return{bread:u,breads:i,pendingBreads:a,fetchBranchBread:async(l,d)=>{console.log("branch IDsss",l),console.log("categoryss",d);try{const p=await s.get("/api/fetch-bread-products",{params:{branches_id:l,category:d}});console.log("bread responsesss",p.data),i.value=p.data}catch(p){console.log(p)}},sendBreadToBranch:async l=>{console.log("data in the store",l);try{const d=await s.post("/api/sending-bread-to-branch",l);i.value=d.data}catch(d){console.log(d)}},fetchSendBreadToBranch:async(l,d,p)=>{console.log("branchid",l),console.log("page",d),console.log("rowsPerPage",p);try{return(await s.get(`/api/fetch-send-bread-to-branch/${l}`,{params:{page:d,per_page:p}})).data}catch(h){throw console.log("Error fetching send product to branch",h),h}},recievedBread:async l=>{console.log("data in the store in the bread",l);try{const d=await s.post("/api/received-branch-bread",l);u.value=d.data}catch(d){console.log(d)}},fetchPendingBreadsReport:async(l,d,p)=>{console.log("branch IDsss",l);try{const h=await s.get("/api/fetch-pending-send-branch-bread",{params:{branch_id:l}});console.log("bread responsesss",h.data),a.value=h.data}catch(h){console.log(h)}}}}),O=k("selectaProduct",()=>{const u=n(null),i=n([]),a=n([]),g=n([]),f=n([]),y=n([]);return{selectaProduct:u,selectaProducts:i,pendingSelectaReports:a,confirmedSelectaReports:g,declinedSelectaReports:f,selectaProductReports:y,searchSelectaProducts:async({branches_id:e,query:o,category:t})=>{console.log(e),console.log(o),console.log(t);try{const r=await s.post("/api/search-products",{branches_id:e,query:o,category:t});i.value=r.data}catch(r){console.error("Error searching Selecta products:",r)}},createSelectaStocks:async e=>{console.log(e);try{const o=await s.post("/api/selecta-stocks-report",e);i.value=o.data}catch(o){console.log(o)}},fetchPendingSelectaStocks:async(e,o)=>{console.log("branchId",e),console.log("category",o);try{const t=await s.get(`/api/selecta-added-stocks/${e}/pending-reports`,{params:{status:o}});a.value=t.data}catch(t){console.log(t)}},fetchBranchSelectaProduct:async(e,o)=>{console.log("ID",e),console.log("category",o);try{const t=await s.get("/api/fetch-selecta-products",{params:{branches_id:e,category:o}});i.value=t.data,console.log("fetch datasss",t.data)}catch(t){throw console.error("Error fetching branch selecta products:",t),t}},confirmReport:async e=>{console.log("id",e),R.show();try{const o=await s.post(`/api/confirm-selecta-report/${e}`);if(o.status===200){const t=a.value.findIndex(r=>r.id===e);t!==-1&&a.value.splice(t,1)}return o.data}catch(o){console.log(o)}finally{R.hide()}},fetchConfirmedSelectaStocks:async(e,o)=>{console.log("branchId",e),console.log("category",o);try{const t=await s.get(`/api/selecta-added-stocks/${e}/confirmed-reports`,{params:{status:o}});g.value=t.data}catch(t){console.log(t)}},fetchDeclinedSelectaStocks:async(e,o)=>{console.log("branchId",e),console.log("category",o);try{const t=await s.get(`/api/selecta-added-stocks/${e}/declined-reports`,{params:{status:o}});f.value=t.data}catch(t){console.log(t)}},fetchSelectaProductReports:async(e,o,t)=>{try{return(await s.get(`/api/selecta-added-stocks/${e}`,{params:{page:o,per_page:t}})).data}catch(r){throw console.log("Error fetching selecta product reports:",r),r}},declineReport:async(e,o)=>{console.log("id",e),console.log("remark",o);try{const t=await s.post(`/api/reports/${e}/decline-selecta-reports`,{remark:o});if(t.status===200){const r=a.value.findIndex(m=>m.id===e);r!==-1&&a.value.splice(r,1)}return t.data}catch(t){console.log(t)}}}}),x=k("softdrinksProducts",()=>{const u=n(null),i=n([]),a=n([]),g=n([]),f=n([]),y=n([]);return{softdrinksProduct:u,softdrinksProducts:i,pendingSoftdrinksReports:a,confirmedSoftdrinksReports:g,declinedSoftdrinksReports:f,softdrinksProductsReport:y,fetchSoftdrinksProductReports:async(e,o,t)=>{try{const r=await s.get(`/api/softdrinks-added-stocks/${e}`,{params:{page:o,per_page:t}});return console.log("response",r.data),r.data}catch(r){throw console.log("Error fetching selecta product reports:",r),r}},fetchPendingSoftdrinksStocks:async(e,o)=>{console.log("branchId",e),console.log("category",o);try{const t=await s.get(`/api/softdrinks-added-stocks/${e}/pending-reports`,{params:{status:o}});a.value=t.data}catch(t){console.log(t)}},fetchConfirmedSoftdrinksStocks:async(e,o)=>{console.log("branchId",e),console.log("category",o);try{const t=await s.get(`/api/softdrinks-added-stocks/${e}/confirmed-reports`,{params:{status:o}});g.value=t.data}catch(t){console.log(t)}},fetchDeclinedSoftdrinksStocks:async(e,o)=>{console.log("branchId",e),console.log("category",o);try{const t=await s.get(`/api/softdrinks-added-stocks/${e}/declined-reports`,{params:{status:o}});f.value=t.data}catch(t){console.log(t)}},fetchBranchSoftdrinksProduct:async(e,o)=>{console.log("ID",e),console.log("category",o);try{const t=await s.get("/api/fetch-softdrinks-products",{params:{branches_id:e,category:o}});i.value=t.data,console.log("fetch datasss",t.data)}catch(t){throw console.error("Error fetching branch selecta products:",t),t}},searchSoftdrinksProducts:async({branches_id:e,query:o,category:t})=>{console.log(e),console.log(o),console.log(t);try{const r=await s.post("/api/search-selecta-products",{branches_id:e,query:o,category:t});y.value=r.data}catch(r){console.error("Error searching Selecta products:",r)}},createSoftdrinksStocks:async e=>{console.log(e);try{const o=await s.post("/api/softdrinks-stocks-report",e);y.value=o.data}catch(o){console.log(o)}},confirmReport:async e=>{console.log("id",e);try{const o=await s.post(`/api/confirm-softdrinks-report/${e}`);if(o.status===200){const t=a.value.findIndex(r=>r.id===e);t!==-1&&a.value.splice(t,1)}return o.data}catch(o){console.log(o)}},declineReport:async(e,o)=>{console.log("id",e),console.log("remark",o);try{const t=await s.post(`/api/reports/${e}/decline-softdrinks-reports`,{remark:o});if(t.status===200){const r=a.value.findIndex(m=>m.id===e);r!==-1&&a.value.splice(r,1)}return t.data}catch(t){console.log(t)}}}}),D=k("otherProduct",()=>{const u=n(null),i=n([]),a=n([]),g=n([]),f=n([]),y=n([]);return{otherProduct:u,otherProducts:i,pendingOtherReports:a,confirmedOtherReports:g,declinedOtherReports:f,otherProductReports:y,createOtherStocks:async c=>{console.log(c);try{const e=await s.post("/api/other-stocks-report",c);i.value=e.data}catch(e){console.log(e)}},fetchBranchOtherProduct:async(c,e)=>{console.log("ID",c),console.log("category",e);try{const o=await s.get("/api/fetch-other-products",{params:{branches_id:c,category:e}});console.log("fetch datasss",o.data),i.value=o.data}catch(o){throw console.error("Error fetching branch selecta products:",o),o}},fetchOtherProductReports:async(c,e,o)=>{try{const t=await s.get(`/api/other-added-stocks/${c}`,{params:{page:e,per_page:o}});return console.log(t.data),t.data}catch(t){throw console.log("Error fetching selecta product reports:",t),t}},fetchPendingOtherStocks:async(c,e)=>{console.log("branchId",c),console.log("category",e);try{const o=await s.get(`/api/other-added-stocks/${c}/pending-reports`,{params:{status:e}});a.value=o.data}catch(o){console.log(o)}},fetchConfirmedOtherStocks:async(c,e)=>{console.log("branchId",c),console.log("category",e);try{const o=await s.get(`/api/other-added-stocks/${c}/confirmed-reports`,{params:{status:e}});console.log("response",o.data),g.value=o.data}catch(o){console.error(o)}},fetchDeclinedOtherStocks:async(c,e)=>{console.log("branchId",c),console.log("category",e);try{const o=await s.get(`/api/other-added-stocks/${c}/declined-reports`,{params:{status:e}});f.value=o.data}catch(o){console.log(o)}},confirmReport:async c=>{console.log("id",c);try{const e=await s.post(`/api/confirm-otherProd-report/${c}`);if(e.status===200){const o=a.value.findIndex(t=>t.id===c);o!==-1&&a.value.splice(o,1)}return e.data}catch(e){console.log(e)}},declineReport:async(c,e)=>{console.log("id",c),console.log("remark",e);try{const o=await s.post(`/api/reports/${c}/decline-otherstocks-reports`,{remark:e});if(o.status===200){const t=a.value.findIndex(r=>r.id===c);t!==-1&&a.value.splice(t,1)}return o.data}catch(o){console.log(o)}}}});export{O as a,x as b,D as c,$ as u};
