import{d as _,r as i,P as s,N as y}from"./index.ca72f247.js";import{api as c}from"./axios.0019c736.js";const M=_("premix",()=>{const w=i(null),d=i([]),l=i([]),m=i([]),f=i({data:[],pagination:{total:0,per_page:3,current_page:1,last_page:1,from:0,to:0}}),x=i([]),g=i([]),p=i([]),u=i([]),v=i([]),h=i([]),D=i([]),R=async(o,e,t,r)=>{try{const a=await c.get(`/api/get-request-branch-premix/${o}`,{params:{page:e,per_page:t,search:r}});h.value=a.data}catch(a){console.error(a)}},q=async o=>{console.log("warehouseId",o)},P=async(o,e,t,r)=>{try{return(await c.get(`/api/get-request-branch-employee-premix/${o}/${e}`,{params:{page:t,per_page:r}})).data}catch(a){console.error(a)}};return{premix:w,premixes:d,pendingPremixData:l,confirmPremixData:m,declinePremixData:f,processPremixData:x,completedPremixData:g,toDeliverPremixData:p,toReceivePremixData:u,receivePremixData:v,branchPremix:h,branchEmployeePremix:D,savePremix:async o=>{console.log("data from store",o),console.log("data from store branch id",o.branch_id),s.show();try{const e=await c.post("/api/branch-premix",o);d.value=e.data}catch(e){console.error(e)}finally{s.hide()}},fetchBranchPremix:async o=>{try{const e=await c.get(`/api/get-branch-premix/${o}`);d.value=e.data}catch(e){console.error(e)}},searchPremix:async(o,e)=>{console.log("searchQuery",o),console.log("branchId",e);const t=await c.get("/api/search-premix",{params:{keyword:o,branch_id:e}});console.log("premix search",t.data),d.value=t.data},fetchPendingPremix:async(o,e)=>{console.log("warehouseId",o),console.log("category",e);try{const t=await c.get(`/api/pending-premix/${o}`,{params:{status:e}});console.log("pendong",t.data),l.value=t.data}catch(t){console.error("error",t)}},confirmPremix:async o=>{console.log("confirmdata",o),s.show();try{const e=await c.post("/api/confirm-premix",o);if(console.log("confirm",e.data),e.status===200){const t=o.id,r=l.value.findIndex(a=>a.id===t);r!==-1&&l.value.splice(r,1)}return e.data}catch(e){console.log(e)}finally{s.hide()}},fetchConfirmPremix:async o=>{console.log("warehouseId",o);try{const e=await c.get(`/api/get-confirm-premix/${o}`);console.log("confirmed.data",e.data),m.value=e.data}catch(e){console.error(e)}},declinePremix:async o=>{console.log("declineData",o);try{const e=await c.post("/api/decline-premix",o);if(e.status===200){const t=o.id,r=l.value.findIndex(a=>a.id===t);r!==-1&&l.value.splice(r,1)}console.log("decline Reports",e.data),f.value=e.data}catch(e){console.log("error",e)}},fetchDeclinePremix:async(o,e,t=3,r=1,a="")=>{console.log("fetchDeclinePremix warehouseId",o),console.log("status",e),console.log("page",t),console.log("per_page",r),console.log("search",a);try{const n=await c.get(`/api/get-decline-premix/${o}`,{params:{status:e,page:t,per_page:r,search:a}});console.log("decline.data",n.data),f.value=n.data}catch(n){console.log(n)}},processPremix:async o=>{console.log("process data",o),s.show();try{const e=await c.post("/api/process-premix",o);if(console.log("process.data.premix_history.status",e.status),e.status===200){const t=o.id,r=m.value.findIndex(a=>a.id===t);console.log("index",r),r!==-1&&m.value.splice(r,1)}return console.log("process",e.data),e.data}catch(e){console.log(e)}finally{s.hide()}},fetchProcessPremix:async o=>{console.log("warehouseId",o);try{const e=await c.get(`/api/get-process-premix/${o}`);console.log("process.data",e.data),x.value=e.data}catch(e){console.log(e)}},completedPremix:async o=>{console.log("data completed premix",o),s.show();try{const e=await c.post("/api/completed-premix",o);if(e.status===200){const t=o.id,r=x.value.findIndex(a=>a.id===t);console.log("index",r),r!==-1&&x.value.splice(r,1)}return console.log("completed",e.data),e.data}catch(e){console.log(e)}finally{s.hide()}},fetchCompletedPremix:async o=>{console.log("warehouseId",o);const e=await c.get(`/api/get-completed-premix/${o}`);console.log("process.data",e.data),g.value=e.data},toDeliverPremix:async o=>{console.log("data completed premix",o),s.show();try{const e=await c.post("/api/to-deliver-premix",o);if(e.status===200){const t=o.id,r=g.value.findIndex(a=>a.id===t);r!==-1&&g.value.splice(r,1)}console.log("toDeliver",e.data),p.value=e.data}catch(e){console.log(e)}finally{s.hide()}},fetchToDeliverPremix:async o=>{console.log("warehouseId",o);const e=await c.get(`/api/get-to-deliver-premix/${o}`);console.log("TO Deliver data",e.data),p.value=e.data},toReceivePremix:async o=>{console.log("data receive premix",o),s.show();try{const e=await c.post("/api/to-receive-premix",o);if(e.status===200){const t=o.id,r=p.value.findIndex(a=>a.id===t);r!==-1&&p.value.splice(r,1)}console.log("toReceive",e.data),u.value=e.data}catch(e){console.log(e)}finally{s.hide()}},fetchToReceivePremix:async o=>{console.log("warehouseId",o);const e=await c.get(`/api/get-to-receive-premix/${o}`);console.log("TO receive data",e.data),u.value=e.data},fetchRequestBranchPremix:R,receivePremix:async o=>{console.log("data to be received",o),s.show();try{const e=await c.post("/api/receive-premix",o);if(console.log("response to recieve",e.data),e.message==="Branch raw materials updated successfully"){const t=e.data.receivePremixes.request_premixes_id,r=e.data.receivePremixes.status,a=h.value.findIndex(n=>n.id===t);a!==-1&&h.value[a].status}}catch(e){console.log(e)}finally{s.hide()}},fetchReceivePremix:async(o,e,t,r)=>{try{const a=await c.get(`/api/get-receive-premix/${o}`,{params:{status:e,page:t,per_page:r}});v.value=a.data}catch(a){console.log(a)}},saveRequestPremix:async(o,e,t)=>{console.log("data request oremix",o),console.log("data request branchId",e),console.log("data request employeeId",t);const r=10,a=10;s.show();try{const n=await c.post("/api/request-premix",{requests:o});console.log("response",n.data),P(e,t,r,a),y.create({type:"positive",message:"Request Premix successfully"})}catch(n){console.error(n),y.create({type:"negative",message:"Request Premix Error"})}finally{s.hide()}},fetchRequestBranchEmployeePremix:P,fetchWarehousePremix:q}});export{M as u};
