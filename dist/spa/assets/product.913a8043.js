import{d as g,n as d,N as c,P as a}from"./index.2488befc.js";import{api as o}from"./axios.c5436407.js";const x=g("products",()=>{const p=d(null),s=d([]),u=d([]),l=async e=>{const t=await o.get("/api/search-products",{params:{keyword:e}});s.value=t.data,console.log("searched products",t.data)},n=async()=>{try{const e=await o.get("/api/products");s.value=e.data,console.log("===================================="),console.log("products.value ",s.value),console.log("====================================")}catch{c.create({type:"negative",message:"Failed to fetch product",timeout:1e3})}};return{product:p,products:s,breads:u,searchProducts:l,fetchProducts:n,createProducts:async e=>{a.show();try{const t=await o.post("/api/products",e);if(console.log("data",t.data),t.data.message==="Product saved successfully"){const i=s.value.find(r=>r.id===e.id);n(),s.value.unshift(t.data),c.create({type:"positive",message:"Product created successfully"})}else t.data.message==="The product already exists."&&c.create({type:"warning",message:"The product already exists.",position:"top"})}catch(t){console.log("erroe",t)}finally{a.hide()}},updateProducts:async(e,t)=>{a.show();const i=await o.put(`/api/products/${e}`,t),r=s.value.findIndex(y=>y.id===e);r!==-1&&(s.value[r]=i.data),c.create({type:"positive",message:"Product updated successfully",timeout:1e3}),a.hide()},deleteProducts:async e=>{a.show(),await o.delete(`/api/products/${e}`),s.value=s.value.filter(t=>t.id!==e),c.create({type:"negative",icon:"warning",message:"Product successfully deleted",timeout:1e3}),a.hide()},fetchProductsByCategory:async e=>{const t=await o.get("/api/bread-products",e);u.value=t.data}}});export{x as u};
