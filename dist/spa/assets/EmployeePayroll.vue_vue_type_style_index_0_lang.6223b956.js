import{d as r,r as a,N as p}from"./index.f2a38bfc.js";import{api as l}from"./axios.a673ff31.js";r("payroll",()=>{const _=a(null),s=a([]);return{payroll:_,payrollPerCutOff:s,fetchPayrollPerCutOff:async e=>{console.log("employee ID in fetfching payrol:",e);try{const t=await l.get(`/api/fetch-payroll-cut-off/${e}`)}catch{}}}});const u=r("employee-incentives",()=>{const _=a(null),s=a([]);return{employeeIncentive:_,employeeIncentives:s,fetchEmployeeIncentives:async(e,t,y)=>{try{const o=await l.get(`/api/fetch-employee-incentives-per-cut-off/${e}/${t}/${y}`);console.log("\u2705 Response:",o.data),s.value=o.data}catch(o){console.error("\u274C API error:",o)}}}});const v=r("employee-charges",()=>{const _=a(null),s=a([]);return{employeeCharge:_,employeeCharges:s,fetchEmployeeCharges:async e=>{console.log("fetch employee charges in store data from datessss",e);const t=await l.get(`/api/employee-charges/${e.fromDate}/${e.toDate}/${e.employeeID}`);s.value=t.data,console.log("employeeCharges",s.value)}}});const d=r("payslips",()=>{const _=a(null),s=a([]);return{payslip:_,payslips:s,createPayslip:async e=>{console.log("data payslip data",e);try{const t=await l.post("/api/payslip",e);return p.create({type:"positive",message:"Payslip successfully created",setTimeout:1e3}),t.data}catch(t){console.log("payslipsss error",t),t.response.data.message==="Payslip already exists"?p.create({type:"warning",message:"Duplicate payslip detected. A payslip with the same details already exists! ",setTimeout:5e3}):p.create({type:"negative",message:`${t.response.data.message}! `,setTimeout:5e3}),console.log("payslip error",t)}}}});export{v as a,d as b,u};
