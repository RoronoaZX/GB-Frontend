import{d as l,n as r,N as o,P as a}from"./index.9c9d4c4e.js";import{api as c}from"./axios.fd4410eb.js";const b=l("products",()=>{const n=r(null),s=r([]),d=r([]);return{product:n,products:s,breads:d,searchProducts:async t=>{const e=await c.get("/api/search-products",{params:{keyword:t}});s.value=e.data,console.log("searched products",e.data)},fetchProducts:async()=>{try{const t=await c.get("/api/products");s.value=t.data}catch{o.create({type:"negative",message:"Failed to fetch product",timeout:1e3})}},createProducts:async t=>{a.show();const e=await c.post("/api/products",t);s.value.unshift(e.data),o.create({type:"positive",message:"Product created successfully"}),a.hide()},updateProducts:async(t,e)=>{a.show();const p=await c.put(`/api/products/${t}`,e),u=s.value.findIndex(i=>i.id===t);u!==-1&&(s.value[u]=p.data),o.create({type:"positive",message:"Product updated successfully",timeout:1e3}),a.hide()},deleteProducts:async t=>{a.show(),await c.delete(`/api/products/${t}`),s.value=s.value.filter(e=>e.id!==t),o.create({type:"negative",icon:"warning",message:"Product successfully deleted",timeout:1e3}),a.hide()},fetchProductsByCategory:async t=>{const e=await c.get("/api/bread-products",t);d.value=e.data}}});export{b as u};
