import{d as y,r as a,P as n,N as u}from"./index.bbd53a23.js";import{api as t}from"./axios.2c36d2a3.js";const J=y("premix",()=>{const h=a(null),m=a([]),i=a([]),d=a([]),g=a([]),p=a([]),x=a([]),l=a([]),v=a([]),f=a([]),P=a([]);return{premix:h,premixes:m,pendingPremixData:i,confirmPremixData:d,declinePremixData:g,processPremixData:p,completedPremixData:x,toDeliverPremixData:l,toReceivePremixData:v,receivePremixData:f,branchPremix:P,savePremix:async o=>{console.log("data from store",o);try{const e=await t.post("/api/branch-premix",o);m.value=e.data}catch(e){console.error(e)}},fetchBranchPremix:async o=>{try{const e=await t.get(`/api/get-branch-premix/${o}`);m.value=e.data}catch(e){console.error(e)}},searchPremix:async(o,e)=>{console.log("searchQuery",o),console.log("branchId",e);const c=await t.get("/api/search-premix",{params:{keyword:o,branch_id:e}});console.log("premix search",c.data),m.value=c.data},fetchPendingPremix:async(o,e)=>{console.log("warehouseId",o),console.log("category",e);try{const c=await t.get(`/api/pending-premix/${o}`,{params:{status:e}});console.log("pendong",c.data),i.value=c.data}catch(c){console.error("error",c)}},confirmPremix:async o=>{console.log("confirmdata",o),n.show();try{const e=await t.post("/api/confirm-premix",o);if(console.log("confirm",e.data),e.status===200){const c=o.id,r=i.value.findIndex(s=>s.id===c);r!==-1&&i.value.splice(r,1)}return e.data}catch(e){console.log(e)}finally{n.hide()}},fetchConfirmPremix:async o=>{console.log("warehouseId",o);try{const e=await t.get(`/api/get-confirm-premix/${o}`);console.log("confirmed.data",e.data),d.value=e.data}catch(e){console.error(e)}},declinePremix:async o=>{console.log("declineData",o);try{const e=await t.post("/api/decline-premix",o);if(e.status===200){const c=o.id,r=i.value.findIndex(s=>s.id===c);r!==-1&&i.value.splice(r,1)}console.log("decline Reports",e.data),g.value=e.data}catch(e){console.log("error",e)}},fetchDeclinePremix:async o=>{console.log("fetchDeclinePremix warehouseId",o),console.log("status",status);const e=await t.get(`/api/get-decline-premix/${o}`);console.log("decline.data",e.data),g.value=e.data},processPremix:async o=>{console.log("process data",o),n.show();try{const e=await t.post("/api/process-premix",o);if(console.log("process.data.premix_history.status",e.status),e.status===200){const c=o.id,r=d.value.findIndex(s=>s.id===c);console.log("index",r),r!==-1&&d.value.splice(r,1)}return console.log("process",e.data),e.data}catch(e){console.log(e)}finally{n.hide()}},fetchProcessPremix:async o=>{console.log("warehouseId",o);const e=await t.get(`/api/get-process-premix/${o}`);console.log("process.data",e.data),p.value=e.data},completedPremix:async o=>{console.log("data completed premix",o);try{const e=await t.post("/api/completed-premix",o);if(e.status===200){const c=o.id,r=p.value.findIndex(s=>s.id===c);console.log("index",r),r!==-1&&p.value.splice(r,1)}return console.log("completed",e.data),e.data}catch(e){console.log(e)}},fetchCompletedPremix:async o=>{console.log("warehouseId",o);const e=await t.get(`/api/get-completed-premix/${o}`);console.log("process.data",e.data),x.value=e.data},toDeliverPremix:async o=>{console.log("data completed premix",o);try{const e=await t.post("/api/to-deliver-premix",o);if(e.status===200){const c=o.id,r=x.value.findIndex(s=>s.id===c);r!==-1&&x.value.splice(r,1)}console.log("toDeliver",e.data),l.value=e.data}catch(e){console.log(e)}},fetchToDeliverPremix:async o=>{console.log("warehouseId",o);const e=await t.get(`/api/get-to-deliver-premix/${o}`);console.log("TO Deliver data",e.data),l.value=e.data},toReceivePremix:async o=>{console.log("data receive premix",o);try{const e=await t.post("/api/to-receive-premix",o);if(e.status===200){const c=o.id,r=l.value.findIndex(s=>s.id===c);r!==-1&&l.value.splice(r,1)}console.log("toReceive",e.data),v.value=e.data}catch(e){console.log(e)}},fetchToReceivePremix:async o=>{console.log("warehouseId",o);const e=await t.get(`/api/get-to-receive-premix/${o}`);console.log("TO receive data",e.data),v.value=e.data},fetchRequestBranchPremix:async o=>{try{const e=await t.get(`/api/get-request-branch-premix/${o}`);P.value=e.data}catch(e){console.error(e)}},receivePremix:async o=>{console.log("data to be received",o);try{return(await t.post("/api/receive-premix",o)).data}catch(e){console.log(e)}},fetchReceivePremix:async o=>{try{const e=await t.get(`/api/get-receive-premix/${o}`);f.value=e.data}catch(e){console.log(e)}},saveRequestPremix:async o=>{console.log("data request oremix",o),n.show();try{const e=await t.post("/api/request-premix",{requests:o});console.log("response",e.data),u.create({type:"positive",message:"Request Premix successfully"})}catch(e){console.error(e),u.create({type:"negative",message:"Request Premix Error"})}finally{n.hide()}}}});export{J as u};
