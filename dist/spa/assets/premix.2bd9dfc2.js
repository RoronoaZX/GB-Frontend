import{d as $,r as i,P as a,N as y}from"./index.731fa509.js";import{api as r}from"./axios.3cfbb276.js";const M=$("premix",()=>{const w=i(null),m=i([]),n=i([]),p=i([]),f=i([]),x=i([]),g=i([]),l=i([]),u=i([]),v=i([]),h=i([]),D=i([]),R=async(o,e,t,s)=>{try{const c=await r.get(`/api/get-request-branch-premix/${o}`,{params:{page:e,per_page:t,search:s}});h.value=c.data}catch(c){console.error(c)}},q=async o=>{console.log("warehouseId",o)},P=async(o,e,t,s)=>{try{return(await r.get(`/api/get-request-branch-employee-premix/${o}/${e}`,{params:{page:t,per_page:s}})).data}catch(c){console.error(c)}};return{premix:w,premixes:m,pendingPremixData:n,confirmPremixData:p,declinePremixData:f,processPremixData:x,completedPremixData:g,toDeliverPremixData:l,toReceivePremixData:u,receivePremixData:v,branchPremix:h,branchEmployeePremix:D,savePremix:async o=>{console.log("data from store",o),console.log("data from store branch id",o.branch_id),a.show();try{const e=await r.post("/api/branch-premix",o);m.value=e.data}catch(e){console.error(e)}finally{a.hide()}},fetchBranchPremix:async o=>{try{const e=await r.get(`/api/get-branch-premix/${o}`);m.value=e.data}catch(e){console.error(e)}},searchPremix:async(o,e)=>{console.log("searchQuery",o),console.log("branchId",e);const t=await r.get("/api/search-premix",{params:{keyword:o,branch_id:e}});console.log("premix search",t.data),m.value=t.data},fetchPendingPremix:async(o,e)=>{console.log("warehouseId",o),console.log("category",e);try{const t=await r.get(`/api/pending-premix/${o}`,{params:{status:e}});console.log("pendong",t.data),n.value=t.data}catch(t){console.error("error",t)}},confirmPremix:async o=>{console.log("confirmdata",o),a.show();try{const e=await r.post("/api/confirm-premix",o);if(console.log("confirm",e.data),e.status===200){const t=o.id,s=n.value.findIndex(c=>c.id===t);s!==-1&&n.value.splice(s,1)}return e.data}catch(e){console.log(e)}finally{a.hide()}},fetchConfirmPremix:async o=>{console.log("warehouseId",o);try{const e=await r.get(`/api/get-confirm-premix/${o}`);console.log("confirmed.data",e.data),p.value=e.data}catch(e){console.error(e)}},declinePremix:async o=>{console.log("declineData",o);try{const e=await r.post("/api/decline-premix",o);if(e.status===200){const t=o.id,s=n.value.findIndex(c=>c.id===t);s!==-1&&n.value.splice(s,1)}console.log("decline Reports",e.data),f.value=e.data}catch(e){console.log("error",e)}},fetchDeclinePremix:async o=>{console.log("fetchDeclinePremix warehouseId",o),console.log("status",status);const e=await r.get(`/api/get-decline-premix/${o}`);console.log("decline.data",e.data),f.value=e.data},processPremix:async o=>{console.log("process data",o),a.show();try{const e=await r.post("/api/process-premix",o);if(console.log("process.data.premix_history.status",e.status),e.status===200){const t=o.id,s=p.value.findIndex(c=>c.id===t);console.log("index",s),s!==-1&&p.value.splice(s,1)}return console.log("process",e.data),e.data}catch(e){console.log(e)}finally{a.hide()}},fetchProcessPremix:async o=>{console.log("warehouseId",o);try{const e=await r.get(`/api/get-process-premix/${o}`);console.log("process.data",e.data),x.value=e.data}catch(e){console.log(e)}},completedPremix:async o=>{console.log("data completed premix",o),a.show();try{const e=await r.post("/api/completed-premix",o);if(e.status===200){const t=o.id,s=x.value.findIndex(c=>c.id===t);console.log("index",s),s!==-1&&x.value.splice(s,1)}return console.log("completed",e.data),e.data}catch(e){console.log(e)}finally{a.hide()}},fetchCompletedPremix:async o=>{console.log("warehouseId",o);const e=await r.get(`/api/get-completed-premix/${o}`);console.log("process.data",e.data),g.value=e.data},toDeliverPremix:async o=>{console.log("data completed premix",o),a.show();try{const e=await r.post("/api/to-deliver-premix",o);if(e.status===200){const t=o.id,s=g.value.findIndex(c=>c.id===t);s!==-1&&g.value.splice(s,1)}console.log("toDeliver",e.data),l.value=e.data}catch(e){console.log(e)}finally{a.hide()}},fetchToDeliverPremix:async o=>{console.log("warehouseId",o);const e=await r.get(`/api/get-to-deliver-premix/${o}`);console.log("TO Deliver data",e.data),l.value=e.data},toReceivePremix:async o=>{console.log("data receive premix",o),a.show();try{const e=await r.post("/api/to-receive-premix",o);if(e.status===200){const t=o.id,s=l.value.findIndex(c=>c.id===t);s!==-1&&l.value.splice(s,1)}console.log("toReceive",e.data),u.value=e.data}catch(e){console.log(e)}finally{a.hide()}},fetchToReceivePremix:async o=>{console.log("warehouseId",o);const e=await r.get(`/api/get-to-receive-premix/${o}`);console.log("TO receive data",e.data),u.value=e.data},fetchRequestBranchPremix:R,receivePremix:async o=>{console.log("data to be received",o),a.show();try{const e=await r.post("/api/receive-premix",o);if(console.log("response to recieve",e.data),e.message==="Branch raw materials updated successfully"){const t=e.data.receivePremixes.request_premixes_id,s=e.data.receivePremixes.status,c=h.value.findIndex(d=>d.id===t);c!==-1&&h.value[c].status}}catch(e){console.log(e)}finally{a.hide()}},fetchReceivePremix:async o=>{try{const e=await r.get(`/api/get-receive-premix/${o}`);v.value=e.data}catch(e){console.log(e)}},saveRequestPremix:async(o,e,t)=>{console.log("data request oremix",o),console.log("data request branchId",e),console.log("data request employeeId",t);const s=10,c=10;a.show();try{const d=await r.post("/api/request-premix",{requests:o});console.log("response",d.data),P(e,t,s,c),y.create({type:"positive",message:"Request Premix successfully"})}catch(d){console.error(d),y.create({type:"negative",message:"Request Premix Error"})}finally{a.hide()}},fetchRequestBranchEmployeePremix:P,fetchWarehousePremix:q}});export{M as u};
