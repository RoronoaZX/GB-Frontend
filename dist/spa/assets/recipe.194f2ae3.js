import{d as g,r as p,P as o,N as i}from"./index.3b6f48aa.js";import{api as r}from"./axios.623fc7c2.js";const v=g("recipes",()=>{const l=p(null),t=p([]),n=async()=>{const s=await r.get("/api/recipes");t.value=s.data};return{recipe:l,recipes:t,fetchRecipes:n,createRecipe:async s=>{try{o.show();const e=await r.post("/api/recipes",s);console.log("response.response",e.data),n(),i.create({type:"positive",message:"Recipe successfully created",timeout:1e3})}catch(e){console.error("User Error message: ",e),e.response.data.message==="The name has already been taken."?i.create({type:"warning",icon:"warning",message:e.response.data.message||"ERROR",setTimeout:5e3}):i.create({type:"negative",icon:"error",message:e.response.data.message||"ERROR",setTimeout:5e3})}finally{o.hide()}},updateRecipeName:async(s,e)=>{console.log("data",s);try{o.show();const a=await r.put("/api/update-name/"+s.id,{name:e}),d=a.data;console.log("recipe response",a.data);const c=t.value.findIndex(m=>m.id==s.id);c!==-1&&(t.value[c]={...t.value[c],...d}),i.create({type:"positive",message:"Recipe name updated successfully",setTimeout:5e3})}catch(a){console.log(a),a.response.data.message==="The name has already been taken."?i.create({type:"warning",icon:"warning",message:a.response.data.message||"ERROR",setTimeout:5e3}):i.create({type:"negative",icon:"error",message:a.response.data.message||"ERROR",setTimeout:5e3})}finally{o.hide()}},deleteRecipe:async s=>{try{o.show();const e=await r.delete(`/api/recipes/${s}`);t.value=t.value.filter(a=>a.id!==s),i.create({type:"positive",icon:"warning",message:"Recipe succesfully deleted",timeout:1e3})}catch(e){i.create({message:`Failed to delete item: ${e.message}`,type:"negative",position:"top-right"})}finally{o.hide()}},searchRecipe:async s=>{const e=await r.get("/api/search-recipes",{params:{keyword:s}});t.value=e.data,console.log("recipe:",e.data)}}});export{v as u};
